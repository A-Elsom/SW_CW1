openapi: 3.0.3
info:
  title: part1
  description: part1
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/universityoflieceste/SecurityCW/1.0.0
  description: SwaggerHub API Auto Mocking
- url: https
tags:
- name: doctors
  description: Everything about Doctors
- name: appointments
  description: Everything about appointments
paths:
  /api/doctors:
    get:
      tags:
      - doctors
      summary: List all doctors
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Doctor'
        "204":
          description: no Hotels To Show
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
    post:
      tags:
      - doctors
      summary: Creates a Doctor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Doctor'
        required: true
      responses:
        "201":
          description: Created Doctor
        "409":
          description: Doctor already exists
  /api/doctors/{id}:
    get:
      tags:
      - doctors
      summary: Return a Doctor by id
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Successfull Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Doctor'
        "404":
          description: Doctor not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
    put:
      tags:
      - doctors
      summary: Update a Doctor by id
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Doctor'
        required: true
      responses:
        "200":
          description: Updated Doctor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Doctor'
        "404":
          description: Doctor not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
    delete:
      tags:
      - doctors
      summary: delete a Doctor by id
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Deleted Doctor
        "404":
          description: Doctor not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
  /api/doctors/{id}/appointments:
    get:
      tags:
      - doctors
      - appointments
      summary: Get the appointments for Doctor by id
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: OK response
          content:
            application/json:
              schema:
                type: array $ref '#/components/schemas/Appointment'
        "204":
          description: No Appointments to show
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
components:
  schemas:
    ErrorInfo:
      type: object
      properties:
        message:
          type: string
          default: Error message
    Doctor:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          description: Doctors full name
        specialisation:
          type: string
          description: Doctors Specialisation
        email:
          type: string
          description: Doctors email
        phoneNumber:
          type: string
          description: Doctors phoneNumber
      example:
        id: 1
        name: DR.Jordan Belford
        specialisation: Gynacologist
        email: JordanB@hospital.com
        phoneNumber: 01957 687453
